/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.x                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale 1;

vertices
(
    (0     0 0)
    (12.57 0 0)
    (0     1 0)
    (12.57 1 0)
    (0     2 0)
    (12.57 2 0)
    (0     0 4.19)
    (12.57 0 4.19)
    (0     1 4.19)
    (12.57 1 4.19)
    (0     2 4.19)
    (12.57 2 4.19)
);

blocks
(
    hex (0 1 3 2 6 7 9  8 ) (38 54 38) simpleGrading (1 14.2857 1)
    hex (2 3 5 4 8 9 11 10) (38 54 38) simpleGrading (1 0.07    1)
);

edges
(
);

boundary
(
    inlet
    {
        type            cyclic;
        neighbourPatch  outlet;
        faces
        (
            (0 6 8  2)
            (2 8 10 4)
        );
    }
    outlet
    {
        type            cyclic;
        neighbourPatch  inlet;
        faces
        (
            (1 3 9  7)
            (3 5 11 9)
        );
    }
    bottom
    {
        type    wall;
        faces
        (
            (0 1 7 6)
        );
    }
    top
    {
        type    wall;
        faces
        (
            (4 10 11 5)
        );
    }
    back
    {
        type            cyclic;
        neighbourPatch  front;
        faces
        (
            (0 2 3 1)
            (2 4 5 3)
        );
    }
    front
    {
        type            cyclic;
        neighbourPatch  back;
        faces
        (
            (6 7 9  8 )
            (8 9 10 11)
        );
    }

);

mergePatchPairs
(
);

// ************************************************************************* //
